import os
import platform
from rich.console import Console
from rich.panel import Panel
from rich.text import Text
from datetime import datetime

from entities.weather import Weather

class ConsoleFormatter:
    def __init__(self, weather_data: Weather):
        self.console = Console()
        self.weather_data = weather_data

    def print_console_weather(self):
        self.clear_console()

        load_text = Text("Loading...! ü§î", justify="center")
        self.console.print(Panel(load_text, expand=True, padding=(1, 2)))

        self.print_weather_info(self.weather_data())

        self.print_main_menu()

        self.handle_menu_selection()

    def clear_console(self):
        """–û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã."""
        if platform.system() == "Windows":
            os.system('cls')
        else:
            os.system('clear')

    def print_header(self):
        welcome_text = Text("Welcome! üòä", justify="center")
        self.console.print(Panel(welcome_text, expand=True, padding=(1, 2)))

    def print_weather_info(self, weather_data: Weather):
        self.clear_console()
        self.print_header()

        city_name = weather_data.city
        temp = weather_data.temperature
        feels_like = weather_data.temperature_feels_like
        temp_min = weather_data.temperature_min
        temp_max = weather_data.temperature_max
        pressure = weather_data.pressure
        wind_speed = weather_data.wind_speed
        wind_dir = weather_data.wind_dir
        visibility = weather_data.visibility
        clouds = weather_data.clouds
        humidity = weather_data.humidity
        sunrise = weather_data.sunrise
        sunset = weather_data.sunset
        description = weather_data.description

        # –ü–∞–Ω–µ–ª—å –¥–ª—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        temperature_panel = (
            f"üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:       {temp}¬∞C\n"
            f"üå¨Ô∏è  –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫:    {feels_like}¬∞C\n"
            f"üå°Ô∏è  –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è:      {temp_min}¬∞C\n"
            f"üå°Ô∏è  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è:     {temp_max}¬∞C"
        )

        # –ü–∞–Ω–µ–ª—å –¥–ª—è –≤–µ—Ç—Ä–∞
        wind_panel = (
            f"üí®  –í–µ—Ç–µ—Ä:            {wind_speed} –º/—Å, {wind_dir}\n"
            f"üå´Ô∏è  –í–∏–¥–∏–º–æ—Å—Ç—å:        {visibility} –∫–º\n"
            f"‚òÅÔ∏è  –û–±–ª–∞—á–Ω–æ—Å—Ç—å:       {clouds}%"
        )

        # –ü–∞–Ω–µ–ª—å –¥–ª—è –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –∏ –¥–∞–≤–ª–µ–Ω–∏—è
        air_conditions_panel = (
            f"üíß  –í–ª–∞–∂–Ω–æ—Å—Ç—å:        {humidity}%\n"
            f"üß≠  –î–∞–≤–ª–µ–Ω–∏–µ:         {pressure} –≥–ü–∞"
        )

        # –ü–∞–Ω–µ–ª—å –¥–ª—è –≤–æ—Å—Ö–æ–¥–∞ –∏ –∑–∞–∫–∞—Ç–∞
        sunrise_sunset_panel = (
            f"üåÖ  –í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞:    {sunrise}\n"
            f"üåá  –ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞:     {sunset}"
        )

        # –ü–∞–Ω–µ–ª—å –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–≥–æ–¥—ã
        description_panel = (
            f"–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:    {description} üåû"
        )

        # –û–±—â–∏–π –±–ª–æ–∫ –¥–ª—è –≤—Å–µ—Ö –ø–∞–Ω–µ–ª–µ–π
        main_panel_content = (
            f"[bold]–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:[/bold]\n{temperature_panel}\n\n"
            f"[bold]–í–µ—Ç–µ—Ä –∏ –≤–∏–¥–∏–º–æ—Å—Ç—å:[/bold]\n{wind_panel}\n\n"
            f"[bold]–í–æ–∑–¥—É—Ö –∏ –¥–∞–≤–ª–µ–Ω–∏–µ:[/bold]\n{air_conditions_panel}\n\n"
            f"[bold]–í–æ—Å—Ö–æ–¥ –∏ –∑–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞:[/bold]\n{sunrise_sunset_panel}\n\n"
            f"[bold]–û–±—â–∏–µ —É—Å–ª–æ–≤–∏—è:[/bold]\n{description_panel}"
        )

        # –í—ã–≤–æ–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –±–ª–æ–∫–∞
        self.console.print(Panel(main_panel_content, title=f"–ü–æ–≥–æ–¥–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city_name}", title_align="center", padding=(1, 2)))

    def print_main_menu(self):
        menu_text = Text(
            "[1] Refresh data  [2] Exit",
            justify="center"
        )
        self.console.print(Panel(menu_text, expand=True, padding=(1, 2)))

    def handle_menu_selection(self):
        while True:
            choice = input("Select an option: ").strip()

            if choice == "1":
                self.console.print("\n[blue]Updating data...[/blue]\n")
                self.print_console_weather()
                pass
            elif choice == "2":
                self.console.print("\n[green]Exiting the program...[/green]\n")
                exit()
            else:
                self.console.print("\n[red]Invalid choice. Please select a valid option.[/red]\n")